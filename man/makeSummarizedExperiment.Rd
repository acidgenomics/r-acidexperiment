% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeSummarizedExperiment.R
\name{makeSummarizedExperiment}
\alias{makeSummarizedExperiment}
\title{Make a SummarizedExperiment object}
\usage{
makeSummarizedExperiment(
  assays = SimpleList(),
  rowRanges = GRanges(),
  rowData = NULL,
  colData = DataFrame(),
  metadata = list(),
  transgeneNames = NULL,
  denylist = TRUE,
  sort = TRUE,
  sessionInfo = TRUE
)
}
\arguments{
\item{assays}{\code{SimpleList}.
Count matrices, which must have matching dimensions. Counts can be passed
in as either a dense matrix (\code{matrix}) or sparse matrix (\code{sparseMatrix}).}

\item{rowRanges}{\code{GRanges} or \code{GRangesList}.
Genomic ranges (e.g. genome annotations). Metadata describing the assay
rows.}

\item{rowData}{\code{DataFrame}.
Metadata describing the assay rows, if genomic ranges are not available.
\emph{Use rowRanges (GRanges) instead, if possible}.}

\item{colData}{\code{DataFrame}.
Metadata describing the assay columns. For bulk RNA-seq, this data
describes the samples. For single-cell RNA-seq, this data describes the
cells.}

\item{metadata}{\code{list}.
Metadata.}

\item{transgeneNames}{\code{character}.
Vector indicating which assay rows denote transgenes (e.g. EGFP, TDTOMATO).}

\item{denylist}{\code{logical(1)}.
Apply a denylist check on illegal column names defined in \code{colData}. This
is useful for catching names that are not considered best practice, and
other values that may conflict with Acid Genomics packages. Refer to
\code{metadataDenylist} for the current list of offending values.}

\item{sort}{\code{logical(1)}.
Ensure all row and column names are sorted alphabetically. This includes
columns inside \code{rowData} and \code{colData}, and \code{metadata} slot names. Assay
names are required to contain \code{counts} as the first assay.}

\item{sessionInfo}{\code{logical(1)}.
Slot session information into \code{metadata}.}
}
\value{
\itemize{
\item Providing \code{rowRanges}: \code{RangedSummarizedExperiment}.
\item Providing \code{rowData}: \code{SummarizedExperiment}.
}
}
\description{
This function is a utility wrapper for \code{SummarizedExperiment} that provides
automatic subsetting for row and column data, as well as automatic handling
of transgenes and spike-ins.
}
\note{
Updated 2021-03-10.
}
\section{Session information}{


This function improves upon the standard constructor by slotting useful
session information into the \code{metadata} slot by default:
\itemize{
\item \code{date}: Today's date, returned from \code{Sys.Date}.
\item \code{sessionInfo}: \code{sessioninfo::session_info()} return.
This behavior can be disabled by setting \code{sessionInfo = FALSE}.
\item \code{wd}: Working directory, returned from \code{getwd}.
}
}

\examples{
## Rows (genes)
genes <- c(
    sprintf("gene\%02d", seq_len(3L)),
    "EGFP"  # transgene
)
print(genes)

## Columns (samples)
samples <- sprintf("sample\%02d", seq_len(4L))
print(samples)

## Counts (assay)
counts <- matrix(
    data = seq_len(length(genes) * length(samples)),
    nrow = length(genes),
    ncol = length(samples),
    dimnames = list(genes, samples)
)
## Primary assay must be named "counts".
assays <- SimpleList(counts = counts)
print(assays)

## Row data (genomic ranges)
## Note that we haven't defined the transgene here.
## It will be handled automatically in the function call.
rowRanges <- emptyRanges(names = head(genes, n = length(genes) - 1L))
print(rowRanges)

## Column data
colData <- DataFrame(
    age = rep(
        x = c(3L, 6L),
        times = length(samples) / 2L
    ),
    genotype = rep(
        x = c("wildtype", "knockout"),
        times = 1L,
        each = length(samples) / 2L
    ),
    row.names = samples
)
print(colData)

## Minimal mode.
x <- makeSummarizedExperiment(assays = assays)
print(x)

x <- makeSummarizedExperiment(
    assays = assays,
    rowRanges = rowRanges,
    colData = colData,
    transgeneNames = "EGFP"
)
print(x)
}
\seealso{
\itemize{
\item \code{SummarizedExperiment()}.
\item \code{help("RangedSummarizedExperiment-class", "SummarizedExperiment")}.
\item \code{help("SummarizedExperiment-class", "SummarizedExperiment")}.
}
}
